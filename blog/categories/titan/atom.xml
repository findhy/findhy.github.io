<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Titan | Findhy's Blog]]></title>
  <link href="http://findhy.com/blog/categories/titan/atom.xml" rel="self"/>
  <link href="http://findhy.com/"/>
  <updated>2014-06-17T13:06:42+08:00</updated>
  <id>http://findhy.com/</id>
  <author>
    <name><![CDATA[Findhy]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Titan:下一代分布式图数据库]]></title>
    <link href="http://findhy.com/blog/2014/06/17/titan-next-generation-graph-database/"/>
    <updated>2014-06-17T10:23:30+08:00</updated>
    <id>http://findhy.com/blog/2014/06/17/titan-next-generation-graph-database</id>
    <content type="html"><![CDATA[<p><a href="http://thinkaurelius.github.io/titan/">Titan</a>是一个由<a href="http://thinkaurelius.com/">Aurelius</a>维护的开源协议为<a href="http://www.apache.org/licenses/LICENSE-2.0.html">Apache 2.0</a>的分布式图形数据库。</p>

<!--more-->


<p>Graph Database作为NoSQL数据库四种存储模式(graph, key-value, column, and document)的其中一种，近年来发展迅猛，因为随着人工智能和社交网络不断发展和融合，数据结构越来越复杂，举个例子，以用户为中心的模型，用户的相关数据可能来源他的社交网络，也可能来源他的网购记录，也可能来源他的个人可穿戴设备等等，这个数据会呈现爆炸性增长，如果用户基数为千万级，再去做关联和流行度分析会非常复杂，Graph Database处理这样的需求具体天生的优势。目前市面上的<a href="http://en.wikipedia.org/wiki/Graph_database#Graph_database_projects">Graph Database</a>有很多，<a href="http://www.neo4j.org/">Neo4j</a>是最为成熟和知名度最高的产品，但因为Neo4j<a href="http://stackoverflow.com/questions/21558589/neo4j-sharding-aspect/21566766#21566766">不支持分片</a>导致其存在可伸缩性的问题，但是貌似Neo4j已经推出相应的解决方案架构，参考这里<a href="http://info.neotechnology.com/rs/neotechnology/images/Understanding%20Neo4j%20Scalability(2).pdf">Neo4j HA-1</a>、<a href="http://neo4j.com/blog/2013-whats-coming-next-in-neo4j/">Neo4j HA-2</a>。</p>

<p>Titan作为新一代的Graph Database，还比较年轻，但非常有前途，它的优势有几方面：</p>

<ul>
<li>天生支持分布式：横向扩展很容易，并且性能可以线性增长</li>
<li>性能：Titan官方在Titan-0.1-alpha做过一个<a href="http://thinkaurelius.com/2012/08/06/titan-provides-real-time-big-graph-data/">测试</a>，性能表现非常强劲</li>
<li>后端存储无关：它可以将数据存储在不同的数据库，目前支持HBase、Cassandra和BerkeleyDB，而且Titan 0.5.0将会集成另外一个模块：Titan/Hadoop，这样会让Titan与现有的数据平台结合更加容易</li>
<li>后端索引无关：目前支持<a href="http://www.elasticsearch.org/">ElasticSearch</a>和<a href="http://lucene.apache.org/">Apache Lucene</a>两种索引</li>
<li>支持多数据中心的高可用和热备份</li>
<li>原生支持<a href="http://www.tinkerpop.com/">tinkerpop</a>：<a href="http://www.tinkerpop.com/">tinkerpop</a>是一系列Graph领域的开源软件栈</li>
</ul>


<p>Titan的架构图：<br/>
<img src="/images/titan-next-1.png"></p>

<h4>总结</h4>

<p>目前Titan刚刚发布<a href="https://groups.google.com/forum/#!topic/aureliusgraphs/cNb4fKoe95M">Titan 0.5.0-M1</a>版本，增加了很多特性，而且文档更加完善了，Titan 0.5.0 GA会在七月底发布，这会是一个非常接近1.0版本的产品，对于有需求的公司可以进行预研，对它完全掌握了再投入生产，毕竟Titan在实际生产环境的案例和技术文档都比较欠缺。但我相信Titan会成为下一代非常出色的Graph Database，我也会继续研究Titan和发布相关Titan相关的文章，希望能为Titan在中国推广做一些贡献，有感兴趣的同学欢迎一起讨论。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Titan Introduction]]></title>
    <link href="http://findhy.com/blog/2014/05/14/titan-graph-db/"/>
    <updated>2014-05-14T22:35:18+08:00</updated>
    <id>http://findhy.com/blog/2014/05/14/titan-graph-db</id>
    <content type="html"><![CDATA[<p>Titan是一个高可用的分布式的图数据库，并且可以支撑上千个用户的并发事务，它有下面这些特性：</p>

<!--more-->


<ul>
<li>弹性和性能的线性扩展</li>
<li>容错性</li>
<li>多数据中心的高可用性和热备份</li>
<li>支持事务的ACID和最终一致性</li>
<li>支持多种不同的后端存储<br/>
<em>Apache Cassandra（分布式）<br/>
Apache HBase（分布式）<br/>
Oracle BerkeleyDB（本地的）<br/>
Persistit（本地）</em></li>
<li>支持多种后端索引  <br/>
<em>ElasticSearch<br/>
Apache Lucene</em></li>
<li>与图形处理栈TinkerPop原生集成   <br/>
  <em>图查询语言Gremlin<br/>
  对象到图的映射器Frames<br/>
  图服务器Rexster<br/>
  标准图API：Blueprints</em></li>
<li>Apache2 license 开源协议</li>
</ul>


<p>Titan最大的优势在于其分布式和线性扩展，性能要高于Neo4j。还有支持HBase数据存储，这样可以和整个Hadoop平台完美结合起来，与YARN平台上面其它应用共享数据，但就这一点，以后Tian可能会代替Neo4j成为图数据库的主流。但是Titan目前应用还不是特别广泛，我们也是在尝试，最高版本是0.4，而且有很多需要改进的地方，包括与HBase的配置挺麻烦的，还无法放到YARN上来管理等等。</p>

<p>更多关于Titan的文档可以看<a href="https://github.com/thinkaurelius/titan/wiki">这里</a></p>

<p>可以从<a href="https://github.com/thinkaurelius/titan/wiki/Getting-Started">这里</a>开始</p>
]]></content>
  </entry>
  
</feed>
